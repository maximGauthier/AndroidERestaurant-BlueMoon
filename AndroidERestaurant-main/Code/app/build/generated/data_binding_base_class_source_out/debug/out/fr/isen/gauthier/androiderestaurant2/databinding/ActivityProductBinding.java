// Generated by view binder compiler. Do not edit!
package fr.isen.gauthier.androiderestaurant2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import fr.isen.gauthier.androiderestaurant2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView activityProductFoodImage;

  @NonNull
  public final TextView activityProductIngredients;

  @NonNull
  public final TextView activityProductTitle;

  private ActivityProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView activityProductFoodImage, @NonNull TextView activityProductIngredients,
      @NonNull TextView activityProductTitle) {
    this.rootView = rootView;
    this.activityProductFoodImage = activityProductFoodImage;
    this.activityProductIngredients = activityProductIngredients;
    this.activityProductTitle = activityProductTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_product_foodImage;
      ImageView activityProductFoodImage = rootView.findViewById(id);
      if (activityProductFoodImage == null) {
        break missingId;
      }

      id = R.id.activity_product_ingredients;
      TextView activityProductIngredients = rootView.findViewById(id);
      if (activityProductIngredients == null) {
        break missingId;
      }

      id = R.id.activity_product_title;
      TextView activityProductTitle = rootView.findViewById(id);
      if (activityProductTitle == null) {
        break missingId;
      }

      return new ActivityProductBinding((ConstraintLayout) rootView, activityProductFoodImage,
          activityProductIngredients, activityProductTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
