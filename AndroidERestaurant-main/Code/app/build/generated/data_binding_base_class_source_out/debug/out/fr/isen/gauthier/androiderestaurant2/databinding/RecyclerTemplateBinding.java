// Generated by view binder compiler. Do not edit!
package fr.isen.gauthier.androiderestaurant2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import fr.isen.gauthier.androiderestaurant2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerTemplateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout recyclerContainer;

  @NonNull
  public final ImageView recyclerImage;

  @NonNull
  public final TextView recyclerPrice;

  @NonNull
  public final ImageView recyclerRightArrow;

  @NonNull
  public final TextView recyclerTitle;

  private RecyclerTemplateBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout recyclerContainer, @NonNull ImageView recyclerImage,
      @NonNull TextView recyclerPrice, @NonNull ImageView recyclerRightArrow,
      @NonNull TextView recyclerTitle) {
    this.rootView = rootView;
    this.recyclerContainer = recyclerContainer;
    this.recyclerImage = recyclerImage;
    this.recyclerPrice = recyclerPrice;
    this.recyclerRightArrow = recyclerRightArrow;
    this.recyclerTitle = recyclerTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerTemplateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerTemplateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_template, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerTemplateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recycler_container;
      RelativeLayout recyclerContainer = rootView.findViewById(id);
      if (recyclerContainer == null) {
        break missingId;
      }

      id = R.id.recycler_image;
      ImageView recyclerImage = rootView.findViewById(id);
      if (recyclerImage == null) {
        break missingId;
      }

      id = R.id.recycler_price;
      TextView recyclerPrice = rootView.findViewById(id);
      if (recyclerPrice == null) {
        break missingId;
      }

      id = R.id.recycler_rightArrow;
      ImageView recyclerRightArrow = rootView.findViewById(id);
      if (recyclerRightArrow == null) {
        break missingId;
      }

      id = R.id.recycler_title;
      TextView recyclerTitle = rootView.findViewById(id);
      if (recyclerTitle == null) {
        break missingId;
      }

      return new RecyclerTemplateBinding((LinearLayout) rootView, recyclerContainer, recyclerImage,
          recyclerPrice, recyclerRightArrow, recyclerTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
